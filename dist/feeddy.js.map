{"version":3,"file":"feeddy.js","sources":["../../lib/jstls/src/core/objects/types.ts","../../lib/jstls/src/core/functions/apply.ts","../../lib/jstls/src/core/objects/handlers.ts","../node_modules/tslib/tslib.es6.js","../../lib/jstls/src/core/exceptions/index.ts","../../lib/jstls/src/core/objects/validators.ts","../../lib/jstls/src/core/functions/bind.ts","../../lib/jstls/src/core/iterable/index.ts","../../lib/jstls/src/core/polyfills/objects/es2022.ts","../../lib/jstls/src/core/objects/factory.ts","../../lib/jstls/src/core/definer/shared.ts","../../lib/jstls/src/core/definer/props.ts","../../lib/jstls/src/core/definer/values.ts","../search/params/params.ts","../../lib/jstls/src/core/utils/functions/call.ts","../search/params/builder.ts","../shared/index.ts","../feeds/raw/index.ts","../shared/converters.ts","../feeds/index.ts","../../lib/jstls/src/core/extensions/number.ts","../../lib/jstls/src/core/extensions/shared/iterables.ts","../../lib/jstls/src/core/extensions/string.ts","../../lib/jstls/src/core/geometry/size/size.ts","../../lib/jstls/src/core/polyfills/symbol/index.ts","../search/query/representation.ts","../search/query/builder.ts","../posts/index.ts","../../lib/jstls/src/core/extensions/array.ts","../module.ts"],"sourcesContent":["import {Typeof} from \"../../types/core\";\r\n\r\n/**\r\n * Checks if the value is of the specified type or types.\r\n * @param value The value to check.\r\n * @param type The type or types to check for.\r\n * @returns True if the value is of the specified type or types, false otherwise.\r\n */\r\nexport function typeIs<T>(value: T, type: Typeof | Typeof[]): boolean {\r\n  const typeOf = typeof value;\r\n  return (Array.isArray(type) ? type : [type])\r\n    .every(type => typeOf === type);\r\n}\r\n\r\n/**\r\n * Checks if the value is defined (not undefined or null).\r\n * @param value The value to check.\r\n * @returns True if the value is defined, false otherwise.\r\n */\r\nexport function isDefined(value: any) {\r\n  return value !== undefined && value !== null\r\n}\r\n\r\n\r\n/**\r\n * Checks if the value is an object.\r\n * @param value The value to check.\r\n * @returns True if the value is an object, false otherwise.\r\n */\r\nexport function isObject(value: any) {\r\n  return isDefined(value) && typeIs(value, \"object\")\r\n}\r\n\r\n\r\n/**\r\n * Checks if the value is a plain object.\r\n * @param value The value to check.\r\n * @returns True if the value is a plain object, false otherwise.\r\n */\r\nexport function isPlainObject(value: any) {\r\n  return isDefined(value) && value.constructor === {}.constructor;\r\n}\r\n\r\n/**\r\n * Checks if the value is a function.\r\n * @param value The value to check.\r\n * @returns True if the value is a function, false otherwise.\r\n */\r\nexport function isFunction(value: any) {\r\n  return typeIs(value, \"function\")\r\n}\r\n\r\n\r\n/**\r\n * Checks if the value is a boolean.\r\n * @param value The value to check.\r\n * @returns True if the value is a boolean, false otherwise.\r\n */\r\nexport function isBoolean(value: any) {\r\n  return typeIs(value, \"boolean\");\r\n}\r\n\r\n/**\r\n * Checks if the value is a number.\r\n * @param value The value to check.\r\n * @returns True if the value is a number, false otherwise.\r\n */\r\nexport function isNumber(value: any) {\r\n  return typeIs(value, \"number\") && !isNaN(value);\r\n  }\r\n\r\n/**\r\n * Checks if the value is a string.\r\n * @param value The value to check.\r\n * @returns True if the value is a string, false otherwise.\r\n */\r\nexport function isString(value: any) {\r\n  return typeIs(value, \"string\")\r\n}\r\n","/**\r\n * Applies a function with the specified this context and arguments.\r\n *\r\n * @param fn - The function to be applied.\r\n * @returns The result of the function application.\r\n */\r\nexport function apply<F extends (this: void) => any>(fn: F): ReturnType<F>;\r\n/**\r\n * Applies a function with the specified this context and arguments.\r\n *\r\n * @param fn - The function to be applied.\r\n * @param thisArg - The context for the function application.\r\n * @returns The result of the function application.\r\n */\r\nexport function apply<F extends (...args: void[]) => any>(fn: F, thisArg: ThisParameterType<F>): ReturnType<F>;\r\n/**\r\n * Applies a function with the specified this context and arguments.\r\n *\r\n * @param fn - The function to be applied.\r\n * @param thisArg - The context for the function application.\r\n * @param args - The arguments to be passed to the function.\r\n * @returns The result of the function application.\r\n */\r\nexport function apply<F extends (...args: any[]) => any>(fn: F, thisArg: ThisParameterType<F>, args: Parameters<F>): ReturnType<F>;\r\nexport function apply<F extends (...args: any) => any>(fn: F, thisArg?: ThisParameterType<F>, args?: Parameters<F>): ReturnType<F> {\r\n  return fn.apply(thisArg, arguments[2]);\r\n}\r\n","import {Keys, Maybe} from \"../../types/core\";\r\nimport {isDefined, isFunction} from \"./types\";\r\nimport {apply} from \"../functions/apply\";\r\n\r\n\r\n/**\r\n * Calls a function with a given value and optional this context.\r\n *\r\n * @param value - The value to be passed to the function.\r\n * @param fn - The function to be called.\r\n * @param thisArg - The context for the function call.\r\n * @returns The result of the function call.\r\n */\r\nexport function letValue<V, T, R>(value: V, fn: (this: T, value: V) => R, thisArg?: T): R {\r\n  return apply(fn, thisArg!, [value]);\r\n}\r\n\r\n\r\n/**\r\n * Calls a function if the given value is defined.\r\n *\r\n * @param value - The value to check if is defined.\r\n * @param fn - The function to call if the value is defined.\r\n * @param thisArg - The context for the function call.\r\n */\r\nexport function ifDefined<T, R>(value: Maybe<T>, fn: (this: R, value: NonNullable<T>) => void, thisArg?: R) {\r\n  if (!isDefined(value))\r\n    return;\r\n  letValue(value!, fn, thisArg);\r\n}\r\n\r\n/**\r\n * Transforms the given object to string.\r\n *\r\n * If its no defined, use the string builder.\r\n * @param value The value to transforms.\r\n * @param nullableString The string builder.\r\n *\r\n * @see {Object.toString}\r\n */\r\nexport function string<T>(value: Maybe<T>, nullableString?: () => string): string {\r\n  if (isDefined(value))\r\n    return value!.toString();\r\n  nullableString = isFunction(nullableString) ? nullableString! : () => \"\";\r\n  return nullableString();\r\n}\r\n\r\nexport function keys<T>(object: T): Keys<T>[] {\r\n  return Object.keys(object)\r\n}\r\n\r\nexport function get<T, K extends Keys<T>>(target: T, key: K): T[K];\r\nexport function get<T>(target: T, key: PropertyKey): any;\r\nexport function get<T, K extends Keys<T>>(target: T & any, key: K | PropertyKey): Maybe<T[K]> {\r\n  return target[key]\r\n}\r\n\r\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","export class IllegalAccessError extends Error {\r\n  name = 'IllegalAccessError';\r\n  constructor(message: string) {\r\n    super(message)\r\n  }\r\n}\r\n\r\nexport class IllegalArgumentError extends Error {\r\n  name = 'IllegalArgumentError';\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n\r\nexport class RequiredArgumentError extends IllegalArgumentError {\r\n  name = 'RequiredArgumentError';\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n","import {Maybe, Typeof} from \"../../types/core\";\r\nimport {isDefined, typeIs} from \"./types\";\r\nimport {IllegalArgumentError} from \"../exceptions\";\r\nimport {apply} from \"../functions/apply\";\r\n\r\n/**\r\n * Checks if the value is defined and returns it.\r\n * @param value The value to checks.\r\n * @param builder The default value builder.\r\n * @param thisArg The this arg for the builder.\r\n * @return The value param if is defined, else, the value returned by the builder.\r\n * @see {isDefined}\r\n */\r\nexport function getDefined<T, R>(value: Maybe<T>, builder: (this: R) => T, thisArg?: R): T {\r\n  return isDefined(value) ? value! : getIf(value, isDefined, builder, thisArg);\r\n}\r\n\r\n/**\r\n * Checks if the value meets the given condition and returns it,\r\n * @param value The value to checks.\r\n * @param condition The condition that the value must meet.\r\n * @param builder The default value builder.\r\n * @param thisArg The this arg for the builder.\r\n * @return The value param if meets the condition, else, the value returned by the builder.\r\n */\r\nexport function getIf<T, R>(value: Maybe<T>, condition: (value: Maybe<T>) => boolean, builder: (this: R) => T, thisArg?: R): T {\r\n  if (condition(value))\r\n    return value!;\r\n  requiredWithType(builder, \"function\", \"builder\");\r\n  value = apply(builder, thisArg!);\r\n  return value;\r\n}\r\n\r\n/**\r\n * Checks if the value meets the given condition and returns it. If not, throws error.\r\n * @param value The value to checks.\r\n * @param condition The condition that the value must meet.\r\n * @param error The error string.\r\n * @throws {IllegalArgumentError} if the value not meets the condition.\r\n */\r\nexport function requireIf<T>(value: T, condition: (value: T) => boolean, error?: string): T {\r\n  condition = requiredWithType(condition, \"function\", \"condition\");\r\n  error = getDefined(error, () => \"The given value not meets the given condition.\")\r\n  if (!condition(value))\r\n    throw new IllegalArgumentError(error);\r\n  return value;\r\n}\r\n\r\n/**\r\n * Checks if the value is defined and returns it. If not, throws error.\r\n * @param value The value to checks.\r\n * @param name The value param name.\r\n * @throws {IllegalArgumentError} if the value is not defined.\r\n * @see {isDefined}\r\n */\r\nexport function requireDefined<T>(value: Maybe<T>, name?: string): T {\r\n  name = getDefined(name, () => \"value\");\r\n  return requireIf(value, isDefined, `The given ${name} argument must be defined.`)!;\r\n}\r\n\r\n/**\r\n * Checks if the value is of any given type. If not, throws error.\r\n * @param value The value to checks.\r\n * @param type The type, or types, that the value may be.\r\n * @param name The value param name.\r\n * @see {typeIs}\r\n */\r\nexport function requiredWithType<T>(value: Maybe<T>, type: Typeof | Typeof[], name?: string): T {\r\n  name = getDefined(name, () => \"value\");\r\n  if (Array.isArray(type)) {\r\n    if (type.every(it => !typeIs(value, it)))\r\n      throw new IllegalArgumentError(`The ${name} argument must be be one of these types: [${type}]`);\r\n  } else if (!typeIs(value, type))\r\n    throw new IllegalArgumentError(`The ${name} argument must be a ${type}`);\r\n\r\n  return value!;\r\n}\r\n\r\n/**\r\n * Checks if the value is a function. If not, throws error.\r\n * @param value The value to checks.\r\n * @param name The value param name.\r\n * @throws {IllegalArgumentError} if the value is not a function.\r\n */\r\nexport function requireFunction<T>(value: Maybe<T>, name?: string): T {\r\n  return requiredWithType(value, \"function\", name);\r\n}\r\n\r\nexport function requireObject<T>(value: Maybe<T>, name?: string): T {\r\n  return requiredWithType(value, 'object', name);\r\n}\r\n","export function bind<F extends (...args: any) => any>(fn: F, thisArg: ThisParameterType<F>): OmitThisParameter<F> {\r\n  return fn.bind(thisArg);\r\n}\r\n","import {ArrayLike, ArrayLikeEach, ArrayLikeReduce, ArrayLikeType} from \"../../types/core/array\";\r\nimport {KeyableObject} from \"../../types/core/objects\";\r\nimport {Foreachable, ForeachableEach, IterableLike, IterableLikeEach} from \"../../types/core/iterable\";\r\nimport {isFunction} from \"../objects/types\";\r\nimport {get} from \"../objects/handlers\";\r\nimport {apply} from \"../functions/apply\";\r\nimport {bind} from \"../functions/bind\";\r\n\r\n\r\nexport function slice<T extends any>(source: ArrayLike<T>, startIndex?: number, endIndex?: number): T[] {\r\n  return apply(Array.prototype.slice, source, [startIndex, endIndex]);\r\n}\r\n\r\nexport function filter<T extends any, R, A extends ArrayLike<T>>(source: A, predicate: ArrayLikeEach<T, R, A, boolean>, thisArg?: R): ArrayLikeType<A>[];\r\nexport function filter<T extends any, R>(source: ArrayLike<T>, predicate: ArrayLikeEach<T, R, ArrayLike<T>, unknown>, thisArg?: R): T[] {\r\n  return apply(Array.prototype.filter, source, [predicate, thisArg]);\r\n}\r\n\r\n\r\nexport function reduce<T, A extends ArrayLike<T>>(source: A, callbackfn: ArrayLikeReduce<T, A>): T;\r\nexport function reduce<T, A extends ArrayLike<T>>(source: A, callbackfn: ArrayLikeReduce<T, A>, initialValue: T): T;\r\nexport function reduce<T, A extends ArrayLike<T>, U>(source: A, callbackfn: ArrayLikeReduce<T, A, U>, initialValue: U): U;\r\nexport function reduce<T>(source: ArrayLike<T>, callbackfn: any, initialValue?: any): any {\r\n  return apply(Array.prototype.reduce, source, [callbackfn, initialValue]);\r\n}\r\n\r\nexport function each<T, I extends ArrayLike<T>, R>(source: I, each: ArrayLikeEach<T, R, I>, thisArg?: R): void;\r\nexport function each<T, I extends Foreachable<T>, R>(source: I, each: ForeachableEach<T, R, I>, thisArg?: R): void;\r\nexport function each<T, R>(source: IterableLike<T> & KeyableObject, each: IterableLikeEach<T, R>, thisArg?: R): void;\r\nexport function each<T, R>(source: IterableLike<T> & KeyableObject, callbackfn: IterableLikeEach<T, R | void>, thisArg?: R): void {\r\n  if (isFunction(get(source, 'forEach'))) {\r\n    callbackfn = bind(callbackfn, thisArg);\r\n    let index = 0;\r\n    source.forEach((value: T) => {\r\n      callbackfn(value, index, source);\r\n      index++;\r\n    })\r\n  } else apply(Array.prototype.forEach, source, [<any>callbackfn, thisArg])\r\n}\r\n\r\nexport function reach<T, I extends ArrayLike<T>, R>(source: I, each: ArrayLikeEach<T, R, I>, thisArg?: R): void;\r\nexport function reach<T, R>(source: ArrayLike<T>, callbackfn: ArrayLikeEach<T, R | void>, thisArg?: R) {\r\n  callbackfn = bind(callbackfn, thisArg);\r\n  let index = source.length;\r\n  while (index > 0) {\r\n    --index;\r\n    callbackfn(source[index], index, source)\r\n  }\r\n}\r\n","// hasOwn\r\nimport {Keys} from \"../../../types/core\";\r\nimport {apply} from \"../../functions/apply\";\r\n\r\nexport function hasOwn<T, K extends Keys<T>>(target: T, key: K): boolean;\r\nexport function hasOwn<T>(target: T, key: PropertyKey): boolean;\r\nexport function hasOwn<T, K extends Keys<T> | PropertyKey>(target: T, key: K): boolean {\r\n  return apply(Object.prototype.hasOwnProperty, target, [key]);\r\n}\r\n","import {AssignMode, KeyableObject} from \"../../types/core/objects\";\r\nimport {isDefined, isObject, isPlainObject} from \"./types\";\r\nimport {Entry, Maybe} from \"../../types/core\";\r\nimport {keys} from \"./handlers\";\r\nimport {each} from \"../iterable\";\r\nimport {hasOwn} from \"../polyfills/objects/es2022\";\r\n\r\ntype AssignNoObjectFn<T> = (target: T, source: T, mode: AssignMode) => void;\r\n\r\nfunction _assign<T extends Object>(target: T, source: T, mode: AssignMode, noObject?: AssignNoObjectFn<T>) {\r\n  if (!isDefined(source))\r\n    return;\r\n\r\n  if (!isObject(source)) {\r\n    if (noObject)\r\n      noObject(target, source, mode);\r\n    return;\r\n  }\r\n  each(keys(source), key => {\r\n    if (mode === 'deep' && hasOwn(target, key)) {\r\n      const tp = target[key] as T;\r\n      const ts = source[key] as T;\r\n      if (isPlainObject(tp) && isObject(ts))\r\n        _assign(tp, ts, mode)\r\n      else target[key] = source[key];\r\n    } else target[key] = source[key];\r\n  })\r\n}\r\n\r\nfunction _assignItems<T extends Object>(mode: AssignMode, target: T, source: IArguments, noObject?: AssignNoObjectFn<T>): T {\r\n  if (!isDefined(target) || !isDefined(source))\r\n    return target;\r\n\r\n  for (let i = 0; i < source.length; i++)\r\n    _assign(target, source[i], mode, noObject);\r\n\r\n  return target;\r\n}\r\n\r\nexport function assign<T extends Object>(target: T, ...source: Partial<T>[]): T;\r\nexport function assign<T extends Object>(target: T): T {\r\n  return _assignItems(\"simple\", target, arguments);\r\n}\r\n\r\nexport function deepAssign<T extends Object>(target: T, ...source: Partial<T>[]): T;\r\nexport function deepAssign<T extends Object>(target: T): T {\r\n  return _assignItems(\"deep\", target, arguments);\r\n}\r\n\r\nfunction _createNoObjectKey(target: KeyableObject, source: Object, mode: AssignMode) {\r\n  target[source.toString()] = source;\r\n}\r\n\r\nexport function create(...args: Object[]): KeyableObject;\r\nexport function create(): KeyableObject {\r\n  return _assignItems(\"simple\", {}, arguments, _createNoObjectKey);\r\n}\r\n\r\nexport function entries(value: Maybe<KeyableObject>[]): Entry<PropertyKey>[][];\r\nexport function entries(value: Maybe<KeyableObject>): Entry<PropertyKey>[];\r\nexport function entries(value: Maybe<KeyableObject>): Entry<PropertyKey>[] | Entry<PropertyKey>[][] {\r\n  const entry: Entry[] = [];\r\n  if (!isDefined(value))\r\n    return entry;\r\n\r\n  if (isObject(value)) {\r\n    each(keys(value!), key => {\r\n      entry.push({\r\n        key,\r\n        value: isObject(value![key]) ? entries(value![key]) : value![key],\r\n      });\r\n    })\r\n  } else entry.push({\r\n    key: value!.toString(),\r\n    value\r\n  })\r\n  return entry;\r\n}\r\n","import {Keys} from \"../../types/core\";\r\nimport {keys} from \"../objects/handlers\";\r\nimport {each} from \"../iterable\";\r\n\r\nexport function multiple<T, D>(target: T, descriptors: D, definer: (target: T, key: Keys<D>, descriptor: D[Keys<D>]) => void) {\r\n  each(keys(descriptors), key => definer(target, key, descriptors[key]))\r\n}\r\n","import {multiple} from \"./shared\";\r\nimport {Keys} from \"../../types/core\";\r\nimport {DefinePropertyDescriptor, DefinePropertyDescriptors} from \"../../types/core/objects/definer\";\r\nimport {hasOwn} from \"../polyfills/objects/es2022\";\r\n\r\n/**\r\n * Define a new property if it doesn't exist.\r\n * @param target The target value.\r\n * @param key The object key.\r\n * @param descriptor The object key descriptor.\r\n *\r\n * @see {Object.defineProperty}\r\n */\r\nexport function prop<T, K extends Keys<T> | PropertyKey>(target: T, key: K, descriptor: DefinePropertyDescriptor<T, K>) {\r\n  if (!hasOwn(target, key))\r\n    Object.defineProperty(target, key, descriptor);\r\n}\r\n/**\r\n * Define new properties if they don't exist.\r\n * @param target The target value.\r\n * @param descriptors The object keys and their descriptors.\r\n *\r\n * @see {prop}\r\n */\r\nexport function props<T>(target: T, descriptors: DefinePropertyDescriptors<T>) {\r\n  multiple(target, descriptors, prop)\r\n}\r\n","import {prop} from \"./props\";\r\nimport {multiple} from \"./shared\";\r\nimport {Keys} from \"../../types/core\";\r\nimport {DefinePropertyDescriptor, DefinePropertyValues} from \"../../types/core/objects/definer\";\r\nimport {MaybeKeyObjectType} from \"../../types/core/objects\";\r\n\r\nfunction _value<T, K extends Keys<T> | PropertyKey>(target: T, key: K, value: MaybeKeyObjectType<T, K>, writable: boolean) {\r\n  prop(target, key, <DefinePropertyDescriptor<T, K>>{\r\n    enumerable: false,\r\n    value,\r\n    writable\r\n  })\r\n}\r\n\r\n/**\r\n * A shortcut for define a new property according to key and value.\r\n * @example\r\n * // the call:\r\n * value(key, value);\r\n *\r\n * // It is equals to call:\r\n * prop(key, {\r\n *  enumerable: false,\r\n *  value: value,\r\n *  writable: false\r\n * });\r\n *\r\n * @param target The target value.\r\n * @param key The object key.\r\n * @param value The object key descriptor value.\r\n *\r\n * @see {prop}\r\n */\r\nexport function readonly<T, K extends Keys<T> | PropertyKey>(target: T, key: K, value: MaybeKeyObjectType<T, K>) {\r\n  _value(target, key, value, false)\r\n}\r\n/**\r\n * A shortcut for define new properties according to keys and values.\r\n * @param target The target value.\r\n * @param values The property keys and values.\r\n * @see {readonly}\r\n */\r\nexport function readonlys<T>(target: T, values: DefinePropertyValues<T>): void;\r\nexport function readonlys<T>(target: T, values: DefinePropertyValues<T>) {\r\n  multiple(target, values, readonly)\r\n}\r\n\r\n\r\n/**\r\n * A shortcut for define a new property according to key and value.\r\n * @example\r\n * // the call:\r\n * writeable(key, value);\r\n *\r\n * // It is equals to call:\r\n * prop(key, {\r\n *  enumerable: false,\r\n *  value: value,\r\n *  writable: true\r\n * });\r\n *\r\n * @param target The target value.\r\n * @param key The object key.\r\n * @param value The object key descriptor value.\r\n *\r\n * @see {prop}\r\n */\r\nexport function writeable<T, K extends Keys<T> | PropertyKey>(target: T, key: K, value: MaybeKeyObjectType<T, K>) {\r\n  _value(target, key, value, true)\r\n}\r\n/**\r\n * A shortcut for define new properties according to keys and values.\r\n * @param target The target value.\r\n * @param values The property keys and values.\r\n * @see {writeable}\r\n */\r\nexport function writeables<T>(target: T, values: DefinePropertyValues<T>) {\r\n  multiple(target, values, writeable)\r\n}\r\n\r\n\r\nexport function configurable<T, K extends Keys<T> | PropertyKey>(target: T, key: K, value: MaybeKeyObjectType<T, K>) {\r\n  prop(target, key, <DefinePropertyDescriptor<T, K>> {\r\n    value,\r\n    enumerable: false,\r\n    configurable: true,\r\n  })\r\n}\r\n\r\nexport function configurables<T>(target: T, values: DefinePropertyValues<T>) {\r\n  multiple(target, values, writeable)\r\n}\r\n","import {OrderBy, RequestFeedParams} from \"../../types/feeds/shared\";\r\nimport {Keys, Maybe, MaybeString, Nullables} from \"../../../lib/jstls/src/types/core\";\r\nimport {keys, string} from \"../../../lib/jstls/src/core/objects/handlers\";\r\nimport {isDefined} from \"../../../lib/jstls/src/core/objects/types\";\r\nimport {getDefined} from \"../../../lib/jstls/src/core/objects/validators\";\r\nimport {assign} from \"../../../lib/jstls/src/core/objects/factory\";\r\nimport {KeyableObject} from \"../../../lib/jstls/src/types/core/objects\";\r\nimport {readonlys} from \"../../../lib/jstls/src/core/definer\";\r\nimport {each} from \"../../../lib/jstls/src/core/iterable\";\r\nimport {QueryStringBuilder} from \"../query/builder\";\r\n\r\nfunction minimumsOne(max: Maybe<string | number>): number {\r\n  max = string(max).toInt();\r\n  return isDefined(max) ? max!.coerceAtLeast(1) : 1;\r\n}\r\n\r\nfunction validDate(date: MaybeString): string {\r\n  try {\r\n    return new Date(date!)\r\n      .toISOString()\r\n  } catch (e) {\r\n    if (isDefined(date))\r\n      console.error('No valid date given: ', date);\r\n    return undefined!;\r\n  }\r\n}\r\n\r\nfunction updateProperty<K extends Keys<RequestFeedParams>>(args: IArguments,\r\n                                                           source: Partial<RequestFeedParams>, key: K,\r\n                                                           builder?: (arg: any) => RequestFeedParams[K],\r\n                                                           noArgs?: boolean,) {\r\n  if (args.length > 0 || noArgs) {\r\n    const value = args.length > 0 ? args[0] : source[key];\r\n    source[key] = builder ? builder(value) : value;\r\n  }\r\n}\r\n\r\n/**\r\n * @class\r\n * The class for managing search parameters.\r\n */\r\nexport class SearchParams {\r\n  /**\r\n   * The search parameters.\r\n   */\r\n  readonly source!: Partial<RequestFeedParams>;\r\n\r\n  constructor(source?: Partial<RequestFeedParams>) {\r\n    readonlys(this as SearchParams, {\r\n      source: getDefined(source, () => ({}))\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Creates a new search parameters object.\r\n   * @param source The search parameters or other SearchParams instance.\r\n   * @param copy Whether to copy the search parameters.\r\n   */\r\n  static from(source?: Partial<RequestFeedParams> | SearchParams, copy?: boolean): SearchParams {\r\n    if (source instanceof SearchParams)\r\n      return copy ? SearchParams.from(source.source, copy) : source;\r\n    return new SearchParams(copy ? assign(<RequestFeedParams>{}, source!) : source);\r\n  }\r\n\r\n  /**\r\n   * Gets the `max-results` parameter.\r\n   * @see {RequestFeedParams.max-results}\r\n   */\r\n  max(): number;\r\n\r\n  /**\r\n   * Sets and gets the `max-results` parameter.\r\n   * @see {RequestFeedParams.max-results}\r\n   * @param max The new max value.\r\n   */\r\n  max(max: string | number): number;\r\n\r\n  max(max?: Maybe<string | number>): number {\r\n    updateProperty(arguments, this.source, 'max-results', minimumsOne, true);\r\n    return this.source[\"max-results\"] as number;\r\n  }\r\n\r\n  /**\r\n   * Gets the `start-index` parameter.\r\n   * @see {RequestFeedParams.start-index}\r\n   */\r\n  start(): number;\r\n\r\n  /**\r\n   * Sets and gets the `start-index` parameter.\r\n   * @see {RequestFeedParams.start-index}\r\n   * @param index The new start index.\r\n   */\r\n  start(index: string | number): number;\r\n\r\n  start(index?: Maybe<string | number>): number {\r\n    updateProperty(arguments, this.source, 'start-index', minimumsOne, true);\r\n    return this.source[\"start-index\"] as number;\r\n  }\r\n\r\n  /**\r\n   * Gets the `published-min` parameter.\r\n   *\r\n   * @see {RequestFeedParams.published-min}\r\n   */\r\n  publishedAtLeast(): MaybeString;\r\n\r\n  /**\r\n   * Sets and gets the `published-min` parameter.\r\n   * @see {RequestFeedParams.published-min}\r\n   * @param min The new date.\r\n   */\r\n  publishedAtLeast(min: string): string;\r\n\r\n  /**\r\n   * Removes the `published-min` parameter.\r\n   * @see {RequestFeedParams.published-min}\r\n   */\r\n  publishedAtLeast(min: Nullables): Nullables;\r\n\r\n  publishedAtLeast(min?: MaybeString): MaybeString {\r\n    updateProperty(arguments, this.source, 'published-min', validDate)\r\n    return this.source[\"published-min\"];\r\n  }\r\n\r\n  /**\r\n   * Removes the `published-max` parameter.\r\n   * @see {RequestFeedParams.published-max}\r\n   */\r\n  publishedAtMost(max: Nullables): Nullables;\r\n\r\n  /**\r\n   * Gets the `published-max` parameter.\r\n   * @see {RequestFeedParams.published-max}\r\n   */\r\n  publishedAtMost(): MaybeString;\r\n\r\n  /**\r\n   * Sets and gets the `published-max` parameter.\r\n   * {@link RequestFeedParams.published-max}\r\n   * @param max The new date.\r\n   */\r\n  publishedAtMost(max: string): string;\r\n\r\n  publishedAtMost(max?: MaybeString): MaybeString {\r\n    updateProperty(arguments, this.source, 'published-max', validDate)\r\n    return this.source[\"published-max\"];\r\n  }\r\n\r\n  /**\r\n   * Gets the `updated-min` parameter.\r\n   * @see {RequestFeedParams.updated-min}\r\n   */\r\n  updatedAtLeast(): MaybeString;\r\n\r\n  /**\r\n   * Sets and gets the `updated-min` parameter.\r\n   * @see {RequestFeedParams.updated-min}\r\n   * @param min The new date.\r\n   */\r\n  updatedAtLeast(min: string): string;\r\n\r\n  /**\r\n   * Removes the `updated-min` parameter.\r\n   * @see {RequestFeedParams.updated-min}\r\n   */\r\n  updatedAtLeast(min: Nullables): Nullables;\r\n\r\n  updatedAtLeast(min?: MaybeString): MaybeString {\r\n    updateProperty(arguments, this.source, 'updated-min', validDate)\r\n    return this.source[\"updated-min\"];\r\n  }\r\n\r\n  /**\r\n   * Gets the `updated-max` parameter.\r\n   * @see {RequestFeedParams.updated-max}\r\n   */\r\n  updatedAtMost(): MaybeString;\r\n\r\n  /**\r\n   * Sets and gets the `updated-max` parameter.\r\n   * @see {RequestFeedParams.updated-max}\r\n   * @param max The new date.\r\n   */\r\n  updatedAtMost(max: string): string;\r\n\r\n  /**\r\n   * Removes the `updated-max` parameter.\r\n   * @see {RequestFeedParams.updated-max}\r\n   */\r\n  updatedAtMost(max: Nullables): Nullables;\r\n\r\n  updatedAtMost(max?: MaybeString): MaybeString {\r\n    updateProperty(arguments, this.source, 'updated-max', validDate)\r\n    return this.source[\"updated-max\"];\r\n  }\r\n\r\n  /**\r\n   * Gets the `orderby` parameter.\r\n   * @see {RequestFeedParams.orderby}\r\n   */\r\n  orderby(): OrderBy;\r\n\r\n  /**\r\n   * Sets and gets the `orderby` parameter.\r\n   *\r\n   * The value assigned will be the default one: `lastmodified`.\r\n   * @see {RequestFeedParams.orderby}\r\n   */\r\n  orderby(order: Nullables): 'lastmodified';\r\n\r\n  /**\r\n   * Sets and gets the `orderby` parameter.\r\n   * @see {RequestFeedParams.orderby}\r\n   * @param order The new order.\r\n   */\r\n  orderby<O extends OrderBy>(order: O): O;\r\n\r\n  orderby<O extends OrderBy>(order?: Maybe<O>): O {\r\n    order = (order === 'updated' || order === 'starttime' || order === 'lastmodified') ? order : 'lastmodified' as O;\r\n    this.source[\"orderby\"] = order;\r\n    return order\r\n  }\r\n\r\n  /**\r\n   * Gets the `q` parameter.\r\n   * @see {RequestFeedParams.q}\r\n   * @see {QueryStringBuilder}\r\n   */\r\n  query(): MaybeString;\r\n\r\n  /**\r\n   * Sets and gets the `q` parameter.\r\n   * @see {RequestFeedParams.q}\r\n   * @see {QueryStringBuilder}\r\n   * @param query The new query.\r\n   */\r\n  query(query: string): string;\r\n\r\n  /**\r\n   * Removes the `q` parameter.\r\n   */\r\n  query(query: Nullables): Nullables;\r\n\r\n  query(query?: MaybeString): MaybeString {\r\n    updateProperty(arguments, this.source, 'q')\r\n    return this.source[\"q\"];\r\n  }\r\n\r\n  alt(type: 'json' | 'rss') {\r\n    updateProperty(arguments, this.source, <any>'alt', (it) => (it == 'alt' || it === 'rss') ? it : 'json')\r\n  }\r\n\r\n  /**\r\n   * Creates a new object with only the defined parameters.\r\n   *\r\n   * @example\r\n   * var params = new SearchParams();\r\n   * params.query(\"title\") // { source: { q: 'title' } }\r\n   * params.max(9) // { source: { q: 'title', \"max-results\": 12 } }\r\n   * params.query(undefined) // { source: { q: undefined, \"max-results\": 12 } }\r\n   * var source = params.toDefined(); // { \"max-results\": 12 }\r\n   */\r\n  toDefined(): Partial<RequestFeedParams> {\r\n    const source: KeyableObject = {};\r\n    each(keys(this.source), function (key) {\r\n      if (isDefined(this[key]))\r\n        source[key] = this[key]\r\n    }, this.source);\r\n    return source as Partial<RequestFeedParams>;\r\n  }\r\n}\r\n","import {slice} from \"../../iterable\";\r\n\r\n/**\r\n * Calls a function with the specified this context and arguments.\r\n *\r\n * @template F - The type of the function to be called.\r\n * @param fn - The function to be called.\r\n * @returns The result of the function call.\r\n */\r\nexport function call<F extends (this: void) => any>(fn: F): ReturnType<F>;\r\n/**\r\n * Calls a function with the specified this context and arguments.\r\n *\r\n * @template F - The type of the function to be called.\r\n * @param fn - The function to be called.\r\n * @param thisArg - The context for the function call.\r\n * @param args - The arguments to be passed to the function.\r\n * @returns The result of the function call.\r\n */\r\nexport function call<F extends (...args: any) => any>(fn: F, thisArg: ThisParameterType<F>, ...args: Parameters<F>): ReturnType<F>;\r\nexport function call<F extends (...args: any) => any>(fn: F, thisArg?: ThisParameterType<F>): ReturnType<F> {\r\n  return fn.apply(thisArg, slice(arguments, 2));\r\n}\r\n","import {SearchParams} from \"./params\";\r\nimport {OrderBy, RequestFeedParams} from \"../../types/feeds/shared\";\r\nimport {Maybe, MaybeString} from \"../../../lib/jstls/src/types/core\";\r\nimport {isDefined} from \"../../../lib/jstls/src/core/objects/types\";\r\nimport {call} from \"../../../lib/jstls/src/core/utils/functions/call\";\r\nimport {string} from \"../../../lib/jstls/src/core/objects/handlers\";\r\n\r\nfunction paramIndex(this: SearchParamsBuilder, index: Maybe<number | string>, action: 'replace' | 'add' | 'subtract') {\r\n  let current = this.__params__.start();\r\n  index = string(index).toInt()! >> 0;\r\n\r\n  current = action === 'add' ? current + index : (action === 'subtract' ? current - index : index);\r\n  this.__params__.start(current);\r\n}\r\n\r\nfunction paramDate(this: SearchParams,\r\n                   min: MaybeString, max: MaybeString,\r\n                   atLeast: (this: SearchParams, min: MaybeString) => MaybeString,\r\n                   atMost: (this: SearchParams, max: MaybeString) => MaybeString,\r\n                   keepAtLeast?: boolean, keepAtMost?: boolean) {\r\n  if (isDefined(min) || !keepAtLeast)\r\n    call(atLeast, this, min);\r\n  if (isDefined(max) || !keepAtMost)\r\n    call(atMost, this, max);\r\n}\r\n\r\nexport class SearchParamsBuilder {\r\n  protected readonly __params__!: SearchParams;\r\n\r\n  private constructor(source: Partial<RequestFeedParams> | SearchParams) {\r\n    if (source instanceof SearchParams)\r\n      this.__params__ = source;\r\n    else return SearchParamsBuilder.from(source)\r\n  }\r\n\r\n  /**\r\n   * Creates a new builder from the given params\r\n   * @param params The source params.\r\n   * @param copy If true, creates first a new param object from the given.\r\n   */\r\n  static from(params?: Partial<RequestFeedParams> | SearchParams, copy?: boolean): SearchParamsBuilder {\r\n    return new SearchParamsBuilder(SearchParams.from(params, copy))\r\n  }\r\n\r\n  /**\r\n   * Creates a new builder.\r\n   */\r\n  static empty(): SearchParamsBuilder {\r\n    return new SearchParamsBuilder({});\r\n  }\r\n\r\n  /**\r\n   * The maximum value of results that the blogger feed api can retrieve.\r\n   */\r\n  static get maxResults(): number {\r\n    return 500;\r\n  }\r\n\r\n  /**\r\n   * Changes the maximum number of results to be retrieved.\r\n   * @param max The max value. The minimum value is 1.\r\n   */\r\n  max(max: Maybe<number | string>): this {\r\n    this.__params__.max(max!)\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Changes the maximum number of results to be retrieved.\r\n   *\r\n   * <b>Alias</b>.\r\n   * @example\r\n   * builder.limit(limit) // .max(limit)\r\n   * @param limit The max value. The minimum value is 1.\r\n   * @see {max}\r\n   */\r\n  limit(limit: Maybe<number | string>): this {\r\n    return this.max(limit)\r\n  }\r\n\r\n  /**\r\n   * Changes the 1-based index of the first result to be retrieved.\r\n   *\r\n   * <b>Blogger API Note</b>\r\n   * - This isn't a general cursoring mechanism.\r\n   * If you first send a query with ?start-index=1&max-results=10 and then send another query with ?start-index=11&max-results=10,\r\n   * the service cannot guarantee that the results are equivalent to ?start-index=1&max-results=20,\r\n   * because insertions and deletions could have taken place in between the two queries.\r\n   *\r\n   * @param index The index value.\r\n   */\r\n  start(index: Maybe<number | string>): this {\r\n    call(paramIndex, this, index, 'replace')\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds the given index to the current start index.\r\n   * @param index The value to add.\r\n   */\r\n  plusStart(index: number): this {\r\n    call(paramIndex, this, index, 'add')\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Subtracts the given index from the current start index.\r\n   * @param index The value to subtract.\r\n   */\r\n  minusStart(index: number): this {\r\n    call(paramIndex, this, index, 'subtract')\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the 1-based index of the first result to be retrieved.\r\n   *\r\n   * <b>Alias</b>.\r\n   * @example\r\n   * builder.index(index) //.start(index)\r\n   *\r\n   * @param index The index value.\r\n   * @see {start}\r\n   */\r\n  index(index: Maybe<number | string>): this {\r\n    return this.start(index)\r\n  }\r\n\r\n  /**\r\n   * Adds the given index to the current start index.\r\n   * @param index The value to add.\r\n   */\r\n  plusIndex(index: number): this {\r\n    return this.plusStart(index);\r\n  }\r\n\r\n  /**\r\n   * Subtracts the given index from the current start index.\r\n   * @param index The value to subtract.\r\n   */\r\n  minusIndex(index: number): this {\r\n    return this.minusStart(index);\r\n  }\r\n\r\n  /**\r\n   * Changes the 1-based index of the first result to be retrieved\r\n   * according to the {@link max} value.\r\n   *\r\n   * @example\r\n   * builder.max(10)\r\n   *  .paginated(2) // .start(11)\r\n   *\r\n   * @param page The page value. The minimum is 0.\r\n   * @see {max}\r\n   */\r\n  paginated(page: Maybe<number | string>): this {\r\n    if (isDefined(page)) {\r\n      const max = this.__params__.max();\r\n      this.start((string(page).toInt()! - 1).coerceAtLeast(0) * max + 1);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the bounds on the entry publication date.\r\n   *\r\n   * - The lower bound is inclusive, whereas the upper bound is exclusive.\r\n   * - Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00.\r\n   *\r\n   * @param min The min publication date value.\r\n   * @param max The max publication date value.\r\n   */\r\n  published(min: MaybeString, max?: MaybeString): this {\r\n    call(paramDate, this.__params__, min, max, this.__params__.publishedAtLeast, this.__params__.publishedAtMost)\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the inclusive min bound on the entry publication date.\r\n   *\r\n   * <b>Alias</b>.\r\n   * @example\r\n   * builder.publishedAtLeast(min) // .published(min)\r\n   * @param min The min publication date value.\r\n   * @see {published}\r\n   */\r\n  publishedAtLeast(min: MaybeString): this {\r\n    call(paramDate, this.__params__, min, undefined,\r\n      this.__params__.publishedAtLeast, this.__params__.publishedAtMost,\r\n      false, true)\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the exclusive max bound on the entry publication date.\r\n   *\r\n   * <b>Alias</b>.\r\n   * @example\r\n   * builder.publishedAtMost(max) // .published(undefined, max)\r\n   * @param max The max publication date value.\r\n   * @see {published}\r\n   */\r\n  publishedAtMost(max: MaybeString): this {\r\n    call(paramDate, this.__params__, undefined, max,\r\n      this.__params__.publishedAtLeast, this.__params__.publishedAtMost, true)\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the bounds on the entry update date.\r\n   *\r\n   * - The lower bound is inclusive, whereas the upper bound is exclusive.\r\n   * - Use the RFC 3339 timestamp format. For example: 2005-08-09T10:57:00-08:00.\r\n   *\r\n   * @param min The min updated date value.\r\n   * @param max The max updated date value.\r\n   */\r\n  updated(min: MaybeString, max?: MaybeString): this {\r\n    call(paramDate, this.__params__, min, max, this.__params__.updatedAtLeast, this.__params__.updatedAtMost)\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the inclusive min bound on the entry update date.\r\n   *\r\n   * <b>Alias</b>.\r\n   * @example\r\n   * builder.updatedAtLeast(min) // .updated(min)\r\n   * @param min The min updated date value.\r\n   * @see {updated}\r\n   */\r\n  updatedAtLeast(min: MaybeString): this {\r\n    call(paramDate, this.__params__, min, undefined,\r\n      this.__params__.updatedAtLeast, this.__params__.updatedAtMost,\r\n      false, true)\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the exclusive min bound on the entry update date.\r\n   *\r\n   * <b>Alias</b>.\r\n   * @example\r\n   * builder.updatedAtMost(max) // .updated(undefined, max)\r\n   * @param max The max updated date value.\r\n   * @see {updated}\r\n   */\r\n  updatedAtMost(max: MaybeString): this {\r\n    call(paramDate, this.__params__, undefined, max,\r\n      this.__params__.updatedAtLeast, this.__params__.updatedAtMost, true)\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * Changes the sort order applied to results.\r\n   * @param order The sort order.\r\n   */\r\n  order(order: Maybe<OrderBy>): this {\r\n    this.__params__.orderby(order!)\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the full-text query string.\r\n   *\r\n   * <b>Blogger API Notes</b>\r\n   * - When creating a query, list search terms separated by spaces, in the form q=term1 term2 term3.\r\n   * - The Google Data service returns all entries that match all of the search terms (like using AND between terms).\r\n   * - Like Google's web search, a Google Data service searches on complete words (and related words with the same stem), not substrings.\r\n   * - To search for an exact phrase, enclose the phrase in quotation marks: q=\"exact phrase\".\r\n   * - To exclude entries that match a given term, use the form q=-term.\r\n   * - The search is case-insensitive.\r\n   * - Example: to search for all entries that contain the exact phrase \"Elizabeth Bennet\"\r\n   * and the word \"Darcy\" but don't contain the word \"Austen\", use the following query: ?q=\"Elizabeth Bennet\" Darcy -Austen.\r\n   *\r\n   * @param query The query value.\r\n   *\r\n   * @see {queryBuilder}\r\n   * @see {QueryStringBuilder}\r\n   */\r\n  query(query: MaybeString): this {\r\n    this.__params__.query(query!);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Creates the search feed params.\r\n   * @param copy If true, return a copy of the created params.\r\n   */\r\n  build(copy?: boolean): Partial<RequestFeedParams> {\r\n    if (copy)\r\n      return SearchParamsBuilder.from(this.__params__.source, true)\r\n        .build();\r\n    return this.__params__.source;\r\n  }\r\n}\r\n\r\n/**\r\n * Creates an empty search params builder.\r\n */\r\nexport function paramsBuilder() {\r\n  return SearchParamsBuilder.empty();\r\n}\r\n","import {FeedOptions, Routes} from \"../types/feeds/shared\";\r\nimport {SearchParams, SearchParamsBuilder} from \"../search\";\r\nimport {requireDefined} from \"../../lib/jstls/src/core/objects/validators\";\r\nimport {isDefined} from \"../../lib/jstls/src/core/objects/types\";\r\nimport {IllegalArgumentError} from \"../../lib/jstls/src/core/exceptions\";\r\nimport {entries} from \"../../lib/jstls/src/core/objects/factory\";\r\nimport {each} from \"../../lib/jstls/src/core/iterable\";\r\n\r\n/**\r\n * The blogger feed routes.\r\n */\r\nexport const routes: Routes = {\r\n\r\n  /**\r\n   * The default feed posts route.\r\n   */\r\n  posts(): string {\r\n    return \"feeds/posts/default\";\r\n  },\r\n\r\n  /**\r\n   * The summary feed posts route.\r\n   */\r\n  postsSummary(): string {\r\n    return \"feeds/posts/summary\";\r\n  }\r\n}\r\n\r\n/**\r\n * Builds a request url according the given options.\r\n * @param options The request options.\r\n */\r\nexport function buildUrl(options: Partial<FeedOptions>): URL {\r\n  requireDefined(options, \"options\")\r\n  let href: string;\r\n  if (isDefined(options.blogUrl))\r\n    href = options.blogUrl!;\r\n  else if (location)\r\n    href = location.origin;\r\n  else throw new IllegalArgumentError(`You must pass the blog url or call this on the browser.`);\r\n\r\n  options.blogUrl = href;\r\n  const fetchUrl = new URL(href);\r\n\r\n  fetchUrl.pathname += options.route === 'full' ? routes.posts() : routes.postsSummary();\r\n\r\n  const params = SearchParams.from(options.params);\r\n  params.alt(\"json\");\r\n  params.max(params.max().coerceIn(1, SearchParamsBuilder.maxResults));\r\n  each(entries(params.toDefined()), param => {\r\n    fetchUrl.searchParams.set(<string>param.key, <string>param.value)\r\n  });\r\n  return fetchUrl;\r\n}\r\n","import {RawBlog, RawBlogSummary, RawPostEntry} from \"../../types/feeds/raw\";\r\nimport {FeedOptions, FeedOptionsFull, FeedOptionsSummary} from \"../../types/feeds/shared\";\r\nimport {buildUrl} from \"../../shared\";\r\nimport {SearchParams, SearchParamsBuilder} from \"../../search\";\r\nimport {getDefined} from \"../../../lib/jstls/src/core/objects/validators\";\r\nimport {deepAssign} from \"../../../lib/jstls/src/core/objects/factory\";\r\n\r\nfunction _rawGet(options: Partial<FeedOptions>, all?: boolean): Promise<RawBlog> {\r\n  options = feedOptions(options);\r\n  const params = SearchParams.from(options.params);\r\n\r\n  if (all) {\r\n    params.start(1);\r\n    params.max(SearchParamsBuilder.maxResults);\r\n  }\r\n\r\n  const entries: RawPostEntry[] = [];\r\n  const url = buildUrl(options);\r\n  const startIndex = params.start();\r\n\r\n  function request(url: string | URL, max: number): Promise<RawBlog> {\r\n    return fetch(url)\r\n      .then(res => res.json())\r\n      .then((blog: RawBlog) => {\r\n        const entry = getDefined(blog.feed.entry, () => []);\r\n        const feed = blog.feed;\r\n        entries.extends(entry);\r\n        if (entry.isNotEmpty() && entry.length >= SearchParamsBuilder.maxResults && ((all && entry.length >= SearchParamsBuilder.maxResults) || (!all && entry.length < max))) {\r\n          if (!all)\r\n            max -= entry.length;\r\n          params.start(params.start() + entry.length)\r\n          params.max(max);\r\n          return request(buildUrl(options), max);\r\n        }\r\n        feed.entry = entries;\r\n        if (params.max() !== entries.length)\r\n          feed.openSearch$itemsPerPage.$t = feed.openSearch$totalResults.$t = entries.length.toString();\r\n        feed.openSearch$startIndex.$t = startIndex.toString();\r\n        return blog;\r\n      });\r\n  }\r\n\r\n  return request(url, params.max())\r\n}\r\n\r\nexport function feedOptions(options: Partial<FeedOptions>): FeedOptions {\r\n  return deepAssign(<FeedOptions>{\r\n    route: 'summary',\r\n    params: {\r\n      \"max-results\": 1\r\n    }\r\n  }, options);\r\n}\r\n\r\nexport function rawGet(options: Partial<FeedOptionsFull>): Promise<RawBlog>;\r\nexport function rawGet(options: Partial<FeedOptionsSummary>): Promise<RawBlogSummary>;\r\nexport function rawGet(options: Partial<FeedOptions>): Promise<RawBlog>;\r\nexport function rawGet(options: Partial<FeedOptions>): Promise<RawBlog> {\r\n  return _rawGet(options);\r\n}\r\n\r\nexport function rawAll(options: Partial<FeedOptionsFull>): Promise<RawBlog>;\r\nexport function rawAll(options: Partial<FeedOptionsSummary>): Promise<RawBlogSummary>;\r\nexport function rawAll(options: Partial<FeedOptions>): Promise<RawBlog>;\r\nexport function rawAll(options: Partial<FeedOptions>): Promise<RawBlog> {\r\n  return _rawGet(options, true);\r\n}\r\n","import {\r\n  RawAuthor,\r\n  RawBlog,\r\n  RawCategory,\r\n  RawPostCategory,\r\n  RawPostEntry,\r\n  RawPostEntrySummary,\r\n  RawText\r\n} from \"../types/feeds/raw\";\r\nimport {Author, Blog, PostEntry, PostEntrySummary, Text} from \"../types/feeds\";\r\nimport {string} from \"../../lib/jstls/src/core/objects/handlers\";\r\nimport {KeyableObject} from \"../../lib/jstls/src/types/core/objects\";\r\nimport {IllegalArgumentError} from \"../../lib/jstls/src/core/exceptions\";\r\nimport {isObject} from \"../../lib/jstls/src/core/objects/types\";\r\n\r\nexport function rawTextToText(text: RawText): Text {\r\n  return isObject(text) ? string(text.$t) : '';\r\n}\r\n\r\nexport function rawTextToNumber(text: RawText): number {\r\n  return rawTextToText(text).toInt()!;\r\n}\r\n\r\nexport function rawTextToBoolean(text: RawText): boolean {\r\n  return Boolean(rawTextToText(text))\r\n}\r\n\r\nexport function rawCategoryToCategory(category: RawCategory[] | RawPostCategory[]): string[] {\r\n  return Array.isArray(category) ? category.map(it => it.term) : [];\r\n}\r\n\r\nexport function rawAuthorToAuthor(author: RawAuthor): Author {\r\n  return {\r\n    email: rawTextToText(author.email),\r\n    name: rawTextToText(author.name),\r\n    uri: rawTextToText(author.uri),\r\n    gd$image: author.gd$image\r\n  }\r\n}\r\n\r\nexport function rawPostToPost(post: RawPostEntry): PostEntry;\r\nexport function rawPostToPost(post: RawPostEntrySummary): PostEntrySummary;\r\nexport function rawPostToPost(post: RawPostEntry | RawPostEntrySummary): PostEntry | PostEntrySummary;\r\nexport function rawPostToPost(post: RawPostEntry | RawPostEntrySummary): PostEntry | PostEntrySummary {\r\n  if (!isObject(post))\r\n    return {} as PostEntry;\r\n\r\n  const base: KeyableObject = {\r\n    id: rawTextToText(post.id),\r\n    author: post.author.map(rawAuthorToAuthor),\r\n    title: rawTextToText(post.title),\r\n    link: post.link,\r\n    category: rawCategoryToCategory(post.category),\r\n    media$thumbnail: {\r\n      width: post.media$thumbnail.width.toInt(),\r\n      height: post.media$thumbnail.height.toInt(),\r\n      url: post.media$thumbnail.url\r\n    },\r\n    updated: rawTextToText(post.updated),\r\n    published: rawTextToText(post.published)\r\n  }\r\n  if ((<RawPostEntry>post).content)\r\n    base.content = rawTextToText((<RawPostEntry>post).content);\r\n  else if ((<RawPostEntrySummary>post).summary)\r\n    base.summary = rawTextToText((<RawPostEntrySummary>post).summary);\r\n  else throw new IllegalArgumentError(\"No valid post given\")\r\n  return base as PostEntry;\r\n}\r\n\r\nexport function rawBlogToBlog(blog: RawBlog): Blog {\r\n  const feed = blog.feed;\r\n  return {\r\n    version: blog.version,\r\n    encoding: blog.encoding,\r\n    feed: {\r\n      id: rawTextToText(feed.id),\r\n      author: feed.author.map(rawAuthorToAuthor),\r\n      category: rawCategoryToCategory(feed.category),\r\n      blogger$adultContent: rawTextToBoolean(feed.blogger$adultContent),\r\n      title: rawTextToText(feed.title),\r\n      subtitle: rawTextToText(feed.subtitle),\r\n      updated: rawTextToText(feed.updated),\r\n      openSearch$startIndex: rawTextToNumber(feed.openSearch$startIndex),\r\n      openSearch$totalResults: rawTextToNumber(feed.openSearch$totalResults),\r\n      openSearch$itemsPerPage: rawTextToNumber(feed.openSearch$itemsPerPage),\r\n      entry: Array.isArray(feed.entry) ? feed.entry.map(post => rawPostToPost(post)) : [],\r\n      link: feed.link\r\n    }\r\n  }\r\n}\r\n","import {rawAll, rawGet} from \"./raw\";\r\nimport {FeedOptions, FeedOptionsFull, FeedOptionsSummary} from \"../types/feeds/shared\";\r\nimport {Blog, BlogSummary} from \"../types/feeds\";\r\nimport {rawBlogToBlog} from \"../shared/converters\";\r\n\r\nexport function all(options: Partial<FeedOptionsFull>): Promise<Blog>;\r\nexport function all(options: Partial<FeedOptionsSummary>): Promise<BlogSummary>;\r\nexport function all(options: Partial<FeedOptions>): Promise<Blog>;\r\nexport function all(options: Partial<FeedOptions>): Promise<Blog> {\r\n  return rawAll(options)\r\n    .then(rawBlogToBlog);\r\n}\r\nexport function get(options: Partial<FeedOptionsFull>): Promise<Blog>;\r\nexport function get(options: Partial<FeedOptionsSummary>): Promise<BlogSummary>;\r\nexport function get(options: Partial<FeedOptions>): Promise<Blog>;\r\nexport function get(options: Partial<FeedOptions>): Promise<Blog> {\r\n  return rawGet(options)\r\n    .then(rawBlogToBlog);\r\n}\r\n","import {readonlys} from \"../definer\";\r\nimport {IllegalArgumentError} from \"../exceptions\";\r\nimport {NumberExtensions, NumberWithExtensions} from \"../../types/core/extensions/number\";\r\n\r\nexport function coerceAtLeast(this: Number, minimum: number) {\r\n  const value = this.valueOf();\r\n  return value < minimum ? minimum : value\r\n}\r\n\r\nexport function coerceAtMost(this: Number, maximum: number) {\r\n  const value = this.valueOf();\r\n  return value > maximum ? maximum : value\r\n}\r\n\r\nexport function coerceIn(this: Number, minimum: number, maximum: number) {\r\n  if (minimum > maximum)\r\n    throw new IllegalArgumentError(`Cannot coerce value to an empty range: maximum ${maximum} is less than minimum ${minimum}.`)\r\n  const value = this.valueOf();\r\n  return (value < minimum) ? minimum : (value > maximum) ? maximum : value\r\n}\r\n\r\nexport function isFromTo(this: Number, minimum: number, maximum: number) {\r\n  const value = this.valueOf();\r\n  return value >= minimum && value <= maximum;\r\n}\r\n\r\nexport function isFromUntil(this: Number, minimum: number, maximum: number) {\r\n  const value = this.valueOf();\r\n  return value >= minimum && value < maximum;\r\n}\r\n\r\n/**\r\n * Apply to the Number prototype the given extensions.\r\n * @param extensions The extensions to apply.\r\n * @see {NumberExtensions}\r\n */\r\nexport function numberExtensions(extensions: Partial<NumberExtensions>) {\r\n  readonlys<NumberWithExtensions>(Number.prototype, extensions);\r\n}\r\n\r\n/**\r\n * Apply to the Number prototype some utils extensions.\r\n * @see {NumberExtensions}\r\n */\r\nexport function applyNumberExtensions() {\r\n  readonlys(Number.prototype, {\r\n    coerceAtLeast,\r\n    coerceAtMost,\r\n    coerceIn,\r\n    isFromTo,\r\n    isFromUntil\r\n  })\r\n}\r\n","import {WithLength} from \"../../../types/core/objects\";\r\nimport {IllegalAccessError} from \"../../exceptions\";\r\nimport {Maybe} from \"../../../types/core\";\r\nimport {apply} from \"../../functions/apply\";\r\n\r\nexport function isEmpty<T extends WithLength>(this: T): boolean {\r\n  return this.length === 0;\r\n}\r\n\r\nexport function isNotEmpty<T extends WithLength>(this: T): boolean {\r\n  return !apply(isEmpty, this);\r\n}\r\n\r\nexport function first<T extends ArrayLike<any>>(this: T): any {\r\n  if (apply(isEmpty, this))\r\n    throw new IllegalAccessError(\"The indexable object is empty.\");\r\n  return this[0];\r\n}\r\n\r\nexport function firstOrNull<T extends ArrayLike<any>>(this: T): Maybe<any> {\r\n  return apply(isEmpty, this) ? null : this[0];\r\n}\r\n\r\nexport function last<T extends ArrayLike<any>>(this: T): Maybe<any> {\r\n  if (apply(isEmpty, this))\r\n    throw new IllegalAccessError(\"The indexable object is empty.\");\r\n  return this[this.length - 1];\r\n}\r\n\r\nexport function lastOrNull<T extends ArrayLike<any>>(this: T): Maybe<any> {\r\n  return apply(isEmpty, this) ? null : this[this.length - 1];\r\n}\r\n","import {readonlys} from \"../definer\";\r\nimport {StringExtensions, StringWithExtensions} from \"../../types/core/extensions/string\";\r\nimport {MaybeNumber} from \"../../types/core\";\r\nimport {isEmpty, isNotEmpty} from \"./shared/iterables\";\r\n\r\n\r\nexport function toInt(this: string | number | StringExtensions, radix?: number): MaybeNumber {\r\n  const value = parseInt(<string> this, radix);\r\n  return isNaN(value) ? null : value\r\n}\r\n\r\nexport function toFloat(this: string | number | StringExtensions): MaybeNumber {\r\n  const value = parseFloat(<string> this);\r\n  return isNaN(value) ? null : value\r\n}\r\n\r\n/**\r\n * Apply to the String prototype some utils extensions.\r\n * @see {StringExtensions}\r\n */\r\nexport function applyStringExtensions() {\r\n  readonlys<StringWithExtensions>(String.prototype,{\r\n    isEmpty,\r\n    isNotEmpty,\r\n    toInt,\r\n    toFloat\r\n  })\r\n}\r\n\r\n/**\r\n * Apply to the String prototype the given extensions.\r\n * @param extensions The extensions to apply.\r\n * @see {StringExtensions}\r\n */\r\nexport function stringExtensions(extensions: Partial<StringExtensions>) {\r\n  readonlys<StringWithExtensions>(String.prototype, extensions);\r\n}\r\n","import {coerceAtLeast} from \"../../extensions/number\";\r\nimport {IllegalArgumentError} from \"../../exceptions\";\r\nimport {toFloat} from \"../../extensions/string\";\r\nimport {MaybeSizeArgument, SizeArgument, SizeConstructor} from \"../../../types/core/size\";\r\nimport {writeables} from \"../../definer\";\r\nimport {isDefined, isNumber} from \"../../objects/types\";\r\nimport {requiredWithType} from \"../../objects/validators\";\r\nimport {string} from \"../../objects/handlers\";\r\nimport {apply} from \"../../functions/apply\";\r\n\r\nexport function isSize(value: any): boolean {\r\n  return value instanceof Size;\r\n}\r\n\r\nexport function parseSize<R extends Size>(constructor: SizeConstructor<R>,\r\n                                          isSize: (value: any) => boolean,\r\n                                          format: number | string,\r\n                                          ratio?: MaybeSizeArgument,\r\n                                          defaultRatio?: boolean,): R {\r\n  let aspectRatio: number = 1;\r\n  if (!isDefined(ratio))\r\n    aspectRatio = parseSize(constructor, isSize, format, 1, true).ratio()\r\n  else if (isNumber(ratio))\r\n    aspectRatio = ratio as number;\r\n  else if (!isSize(ratio))\r\n    aspectRatio = parseSize(constructor, isSize, ratio as any, 1, true).ratio();\r\n\r\n  const match = string(format)\r\n    .split(\":\");\r\n\r\n\r\n  let width = apply(toFloat, match[0])!;\r\n  let height = apply(toFloat, match[1])!;\r\n\r\n  if (isDefined(width) && isDefined(height))\r\n    return new constructor(width, height)\r\n      .adjust(defaultRatio ? 0 : aspectRatio) as R;\r\n  else if (isDefined(width))\r\n    height = width / aspectRatio;\r\n  else if (isDefined(height))\r\n    width = height * aspectRatio;\r\n  else throw new IllegalArgumentError(`The ${defaultRatio ? 'ratio' : 'format'} '${format}' is not valid.`);\r\n\r\n  return new constructor(width, height);\r\n}\r\n\r\nexport function scaleOrAdjustSize<R extends Size>(this: Size, target: SizeArgument,\r\n                                                  constructor: SizeConstructor<R>,\r\n                                                  isSize: (value: any) => boolean,\r\n                                                  adjust?: boolean): R {\r\n  let width = this.getWidth();\r\n  let height = this.getHeight();\r\n  const ratio = this.ratio();\r\n\r\n  let targetRatio: number;\r\n  if (adjust && isNumber(target))\r\n    targetRatio = target as number;\r\n  else {\r\n    target = (isSize(target)) ? target as Size : constructor.parse(target as string);\r\n    targetRatio = target.ratio();\r\n    if (!adjust) {\r\n      width = target.getWidth();\r\n      height = target.getHeight();\r\n    }\r\n  }\r\n\r\n  if (targetRatio !== 0 && targetRatio !== ratio) {\r\n    if (ratio > targetRatio) {\r\n      width = adjust ? height * targetRatio : width;\r\n      height = adjust ? height : width / ratio;\r\n    } else {\r\n      width = adjust ? width : height * ratio;\r\n      height = adjust ? width / targetRatio : height;\r\n    }\r\n  }\r\n\r\n  return new constructor(width, height);\r\n}\r\n\r\n\r\nexport function setSizeProperty(this: Size, args: IArguments, property: '__width__' | '__height__',\r\n                                isSize: (value: any) => boolean,\r\n                                modify?: (value: number) => number): number {\r\n  if (args.length > 0) {\r\n    let value = (isSize(args[0])) ? args[0][property] : args[0]\r\n    value = requiredWithType(apply(toFloat, value), 'number', property.substring(1));\r\n    this[property] = apply(coerceAtLeast, modify ? modify(value) : value, [0]);\r\n  }\r\n\r\n  return this[property];\r\n}\r\n\r\nexport function withSize<R extends Size>(constructor: SizeConstructor<R>, isSize: (value: any) => boolean,\r\n                                         width?: MaybeSizeArgument, height?: MaybeSizeArgument,\r\n                                         ratio?: MaybeSizeArgument): R {\r\n  height = (isSize(height)) ? (<Size>height).getHeight() : height;\r\n  width = (isSize(height)) ? (<Size>width).getWidth() : width;\r\n  return parseSize(constructor, isSize, `${string(width)}:${string(height)}`, ratio)\r\n}\r\n\r\nexport function equalsSize<R extends Size>(this: Size, size: SizeArgument, constructor: SizeConstructor<R>, isSize: (value: any) => boolean): boolean {\r\n  size = isSize(size) ? size as Size : constructor.parse(size as string);\r\n  return size.getWidth() === this.getWidth() && this.getHeight() === size.getHeight();\r\n}\r\n\r\nexport function sizeToString(this: Size, name: string): string {\r\n  return `${name} { width: ${this.getWidth()}, height: ${this.getHeight()} }`;\r\n}\r\n\r\n/**\r\n * Represents a size with width and height properties.\r\n * @class\r\n */\r\nexport class Size {\r\n\r\n  protected __width__!: number;\r\n  protected __height__!: number;\r\n\r\n\r\n  constructor(\r\n    width: SizeArgument,\r\n    height?: number\r\n  ) {\r\n    if (width instanceof Size) {\r\n      height = width.getHeight();\r\n      width = width.getWidth();\r\n    } else if (!isDefined(height))\r\n      height = width as number;\r\n\r\n    writeables(this as Size, {\r\n      _width: undefined,\r\n      _height: undefined,\r\n    });\r\n\r\n    this.width(width);\r\n    this.height(height);\r\n  }\r\n\r\n  /**\r\n   * Parses a size from a given format and optional aspect ratio.\r\n   * @param format - The size format to parse.\r\n   * @param ratio - Aspect ratio to apply to the parsed size.\r\n   *\r\n   * @example\r\n   *\r\n   * Size.parse(1080).toString() -> Size { width: 1080, height: 1080 }\r\n   * Size.parse(1920, 16 / 9).toString() -> Size { width: 1920, height: 1080 }\r\n   * Size.parse(\":1080\", \"16:9\").toString() -> Size { width: 1920, height: 1080 }\r\n   * Size.parse(\"1920:1080\").toString() -> Size { width: 1920, height: 1080 }\r\n   *\r\n   * @returns A new Size instance based on the parsed format and aspect ratio.\r\n   */\r\n  static parse(format: number | string, ratio?: MaybeSizeArgument): Size {\r\n    return parseSize(Size, isSize, format, ratio);\r\n  }\r\n\r\n  /**\r\n   * Creates a new Size instance with the specified height and optional aspect ratio.\r\n   * @param height - The height of the size.\r\n   * @param ratio - Aspect ratio to determine the width.\r\n   * @returns A new Size instance.\r\n   */\r\n  static withHeight(height: SizeArgument, ratio?: MaybeSizeArgument): Size {\r\n    return withSize(Size, isSize, null, height, ratio)\r\n  }\r\n\r\n  /**\r\n   * Creates a new Size instance with the specified width and optional aspect ratio.\r\n   * @param width - The width of the size.\r\n   * @param ratio - Aspect ratio to determine the height.\r\n   * @returns A new Size instance.\r\n   */\r\n  static withWidth(width: SizeArgument, ratio?: MaybeSizeArgument): Size {\r\n    return withSize(Size, isSize, width, null, ratio);\r\n  }\r\n\r\n  /**\r\n   * Gets or sets the width of the size.\r\n   * @param width - The width to set.\r\n   * @returns The width of the size.\r\n   */\r\n  width(width?: MaybeSizeArgument): number {\r\n    return apply(setSizeProperty, this, [arguments, '__width__', isSize]);\r\n  }\r\n\r\n  /**\r\n   * Gets or sets the height of the size.\r\n   * @param height - The height to set.\r\n   * @returns The height of the size.\r\n   */\r\n  height(height?: MaybeSizeArgument): number {\r\n    return apply(setSizeProperty, this, [arguments, '__height__', isSize]);\r\n  }\r\n\r\n  /**\r\n   * Gets the width of the size.\r\n   * @returns The width of the size.\r\n   */\r\n  getWidth(): number {\r\n    return this.__width__;\r\n  }\r\n\r\n  /**\r\n   * Sets the width of the size.\r\n   * @param width - The width to set.\r\n   */\r\n  setWidth(width: SizeArgument) {\r\n    this.width(width);\r\n  }\r\n\r\n  /**\r\n   * Gets the height of the size.\r\n   * @returns The height of the size.\r\n   */\r\n  getHeight(): number {\r\n    return this.__height__;\r\n  }\r\n\r\n  /**\r\n   * Sets the height of the size.\r\n   * @param height - The height to set.\r\n   */\r\n  setHeight(height: SizeArgument) {\r\n    this.height(height);\r\n  }\r\n\r\n  /**\r\n   * Calculates the aspect ratio of the current size.\r\n   * @returns The aspect ratio, or 0 if the height is zero.\r\n   */\r\n  ratio(): number {\r\n    const height = this.getHeight();\r\n    return height === 0 ? 0 : this.getWidth() / height;\r\n  }\r\n\r\n  /**\r\n   * Returns the format of the size like \"width:height\".\r\n   * @returns The format of the size.\r\n   */\r\n  toFormat(): string {\r\n    return `${this.getWidth()}:${this.getHeight()}`;\r\n  }\r\n\r\n  /**\r\n   * Returns the string representation of the size.\r\n   * @returns The string representation of the size.\r\n   */\r\n  toString(): string {\r\n    return apply(sizeToString, this, ['Size'])\r\n  }\r\n\r\n  /**\r\n   * Scales the current size to match the target size maintaining the aspect ratio.\r\n   * @param target - The target size to scale to.\r\n   * @returns A new Size instance representing the scaled size.\r\n   */\r\n  scale(target: SizeArgument): Size {\r\n    return apply(scaleOrAdjustSize, this, [target, Size, isSize]);\r\n  }\r\n\r\n  /**\r\n   * Adjusts the current size to match the target aspect ratio.\r\n   * @param ratio - The target aspect ratio to adjust to.\r\n   * @returns A new Size instance representing the adjusted size.\r\n   */\r\n  adjust(ratio: SizeArgument): Size {\r\n    return apply(scaleOrAdjustSize, this, [ratio, Size, isSize, true]);\r\n  }\r\n\r\n  /**\r\n   * Checks if the current size is equal to the target size.\r\n   * @param size - The size to compare with.\r\n   * @returns True if the sizes are equal, false otherwise.\r\n   */\r\n  equals(size: SizeArgument) {\r\n    return apply(equalsSize, this, [size, Size, isSize])\r\n  }\r\n\r\n  /**\r\n   * Checks if the current size is empty (both width and height are zero).\r\n   * @returns True if the size is empty, false otherwise.\r\n   */\r\n  isEmpty(): boolean {\r\n    return this.getWidth() === 0 && this.getHeight() === 0;\r\n  }\r\n}\r\n","import {string} from \"../../objects/handlers\";\r\nimport {configurables} from \"../../definer\";\r\nimport {apply} from \"../../functions/apply\";\r\n\r\nlet id = 0;\r\nconst postfix = Math.random();\r\n\r\nexport function uid(key: string): string {\r\n  return `Symbol('${string(key)}')_${apply(1.0.toString, ++id + postfix, [36])}`;\r\n}\r\n\r\nexport type SymbolLike = {\r\n  readonly description: string;\r\n} & Object\r\n\r\nexport function Symbol(description: any ): SymbolLike {\r\n  if (new.target !== undefined)\r\n    throw new TypeError(\"Symbol is not a constructor\");\r\n  else if(description instanceof Symbol)\r\n    throw new TypeError(\"Cannot convert symbol to a string.\");\r\n  const symbol = Object.create(Symbol.prototype);\r\n  const tag = uid(description);\r\n  configurables(symbol, {\r\n    description,\r\n    toString() {\r\n      return tag;\r\n    }\r\n  })\r\n\r\n  return symbol;\r\n\r\n}\r\n","import {QueryOperator} from \"../../types/feeds/shared\";\r\nimport {Maybe} from \"../../../lib/jstls/src/types/core\";\r\n\r\nexport const rep = {\r\n  /**\r\n   * Gets the query operator representation.\r\n   * @param operator The query operator.\r\n   */\r\n  operator(operator: Maybe<QueryOperator>): string {\r\n    return operator === 'OR' ? '|' : ' ';\r\n  },\r\n\r\n  /**\r\n   * Gets the quote representation for exact or partial search terms.\r\n   * @param exact Whether the search term is exact.\r\n   */\r\n  quote(exact: Maybe<boolean>): string {\r\n    return exact ? '\"' : '';\r\n  },\r\n\r\n  exclude(): string {\r\n    return '-';\r\n  }\r\n}\r\n","import {uid} from \"../../../lib/jstls/src/core/polyfills/symbol\";\r\nimport {KeyableObject} from \"../../../lib/jstls/src/types/core/objects\";\r\nimport {rep} from \"./representation\";\r\nimport {get, string} from \"../../../lib/jstls/src/core/objects/handlers\";\r\nimport {getDefined} from \"../../../lib/jstls/src/core/objects/validators\";\r\nimport {slice} from \"../../../lib/jstls/src/core/iterable\";\r\nimport {apply} from \"../../../lib/jstls/src/core/functions/apply\";\r\nimport {MaybeString} from \"../../../lib/jstls/src/types/core\";\r\nimport {writeables} from \"../../../lib/jstls/src/core/definer\";\r\n\r\nconst querySymbol = uid('QueryStringBuilder#Query');\r\nconst excludeSymbol = uid('QueryStringBuilder#Exclude');\r\nconst operatorSymbol = uid('QueryStringBuilder#Operator');\r\nconst exactSymbol = uid('QueryStringBuilder#Exact');\r\n\r\n\r\nfunction buildQuery(terms: string | string[], sep: string, startQuote: string, endQuote?: string): string {\r\n  if (!Array.isArray(terms))\r\n    return buildQuery([terms], sep, startQuote, endQuote);\r\n  endQuote = getDefined(endQuote, () => startQuote);\r\n  terms = terms.map(it => string(it))\r\n    .filter(it => it.isNotEmpty());\r\n  return terms.isEmpty() ? '' : `${startQuote}${terms.join(sep)}${endQuote}`\r\n}\r\n\r\nfunction appendQuery(this: QueryStringBuilder, args: ArrayLike<any>, name?: string) {\r\n  if(args.length === 0)\r\n    return;\r\n\r\n  const quote = rep.quote(get(this, exactSymbol));\r\n  const op = rep.operator(get(this, operatorSymbol));\r\n  const xc = get(this, excludeSymbol) ? rep.exclude() : '';\r\n  name = string(name);\r\n  name = name.isNotEmpty() ? name + ':' : '';\r\n\r\n  let current = get(this, querySymbol);\r\n\r\n  const query = buildQuery(slice(args), quote + op + xc + name + quote, xc + name + quote, quote);\r\n\r\n  if (current.isNotEmpty())\r\n    current += op;\r\n\r\n  current += query;\r\n\r\n  (this as KeyableObject)[querySymbol] = current;\r\n\r\n  return this;\r\n}\r\n\r\n/**\r\n * @class\r\n * The builder for create a search query string.\r\n */\r\nexport class QueryStringBuilder {\r\n\r\n  constructor() {\r\n    const symbols: KeyableObject = {};\r\n    symbols[exactSymbol] = false;\r\n    symbols[operatorSymbol] = 'OR';\r\n    symbols[excludeSymbol] = false;\r\n    symbols[querySymbol] = '';\r\n\r\n    writeables(this as QueryStringBuilder, symbols);\r\n  }\r\n\r\n  /**\r\n   * Changes the operator to append search terms to `AND`.\r\n   *\r\n   *\r\n   * @example\r\n   * builder\r\n   *   .labels('first')\r\n   *   .and()\r\n   *   .labels('second')\r\n   *   .build() // 'label:first label:second'\r\n   *\r\n   * @see {or}\r\n   */\r\n  and(): this {\r\n    (this as KeyableObject)[operatorSymbol] = 'AND'\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Changes the operator to append search terms to `OR`.\r\n   *\r\n   * @example\r\n   * builder\r\n   *   .labels('first')\r\n   *   .or()\r\n   *   .labels('second')\r\n   *   .build() // 'label:first|label:second'\r\n   *\r\n   * @see {and}\r\n   */\r\n  or(): this {\r\n    (this as KeyableObject)[operatorSymbol] = 'OR';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the exact mode on.\r\n   *\r\n   * The next search terms will be exact.\r\n   *\r\n   * @example\r\n   * builder\r\n   *   .labels('first')\r\n   *   .and().exact()\r\n   *   .labels('second label') // for labels with spaces, It's recommended to use exact mode.\r\n   *   .build() // 'label:first label:\"second label\"'\r\n   *\r\n   * @see {noExact}\r\n   */\r\n  exact(): this {\r\n    (this as KeyableObject)[exactSymbol] = true;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the exact mode off.\r\n   *\r\n   * The next search terms will not be exact.\r\n   *\r\n   * @example\r\n   * builder\r\n   *   .exact()\r\n   *   .labels('first label') // for labels with spaces, It's recommended to use exact mode.\r\n   *   .or().noExact()\r\n   *   .labels('second')\r\n   *   .build() // 'label:\"first label\"|label:second'\r\n   *\r\n   * @see {exact}\r\n   */\r\n  noExact(): this {\r\n    (this as KeyableObject)[exactSymbol] = false;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the exclude mode on.\r\n   *\r\n   * The next search terms will be exclusive.\r\n   *\r\n   * @example\r\n   * builder\r\n   *   .labels('first')\r\n   *   .and().exclude()\r\n   *   .labels('second')\r\n   *   .build() // 'label:first -label:second'\r\n   *\r\n   * @see {noExclude}\r\n   */\r\n  exclude(): this {\r\n    (this as KeyableObject)[excludeSymbol] = true;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the exclude mode off.\r\n   *\r\n   * The next search terms will not be exclusive.\r\n   *\r\n   * @example\r\n   * builder\r\n   *   .labels('first')\r\n   *   .and().exclude()\r\n   *   .labels('second')\r\n   *   .noExclude()\r\n   *   .labels('third')\r\n   *   .build() // 'label:first -label:second label:third'\r\n   *\r\n   * @see {exclude}\r\n   */\r\n  noExclude(): this {\r\n    (this as KeyableObject)[excludeSymbol] = false;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Appends search terms to the query.\r\n   * @param term The search term.\r\n   */\r\n  terms(...term: string[]): this {\r\n    apply(appendQuery, this, [arguments])\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Appends named search terms to the query.\r\n   * @param name The name of the search terms.\r\n   * @param term The search term.\r\n   */\r\n  named(name: string, ...term: string[]): this {\r\n    apply(appendQuery, this, [slice(arguments, 1), name])\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Appends category search terms to the query.\r\n   *\r\n   * <b>Alias</b>\r\n   * @example\r\n   * builder.categories(...category) // .named('label', ...category)\r\n   *\r\n   * @param category The category o category names.\r\n   * @see {terms}\r\n   */\r\n  categories(...category: string[]): this {\r\n    return apply(this.named, this, <any>['label'].concat(slice(arguments)))\r\n  }\r\n\r\n  /**\r\n   * Appends category search terms to the query.\r\n   *\r\n   * <b>Alias</b>\r\n   * @example\r\n   * builder.labels(label) // .categories(label)\r\n   *\r\n   * @param label The category o category names.\r\n   * @see {categories}\r\n   */\r\n  labels(...label: string[]): this {\r\n    return apply(this.categories, this, <any>arguments);\r\n  }\r\n\r\n  /**\r\n   * Returns the built query string. If It's empty, an undefined value is returned.\r\n   */\r\n  build(): MaybeString {\r\n    const query: string = get(this, querySymbol);\r\n    return query.isEmpty() ? undefined : query;\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a new query string builder.\r\n */\r\nexport function queryBuilder() {\r\n  return new QueryStringBuilder();\r\n}\r\n","import {\r\n  PaginatePostsHandler,\r\n  PaginatePostsOptions,\r\n  PaginatePostsOptionsFull,\r\n  PaginatePostsOptionsSummary,\r\n  WithCategoriesPostsOptions,\r\n  WithCategoriesPostsOptionsFull,\r\n  WithCategoriesPostsOptionsSummary\r\n} from \"../types/posts\";\r\nimport {FeedOptions, ImageSize} from \"../types/feeds/shared\";\r\nimport {SearchParams, SearchParamsBuilder} from \"../search\";\r\nimport {all, get} from \"../feeds\";\r\nimport {Blog, BlogSummary, PostEntry, PostEntrySummary} from \"../types/feeds\";\r\nimport {RawPostEntry, RawPostEntrySummary} from \"../types/feeds/raw\";\r\nimport {feedOptions} from \"../feeds/raw\";\r\nimport {getDefined, getIf, requireObject} from \"../../lib/jstls/src/core/objects/validators\";\r\nimport {isDefined, isObject} from \"../../lib/jstls/src/core/objects/types\";\r\nimport {letValue, string} from \"../../lib/jstls/src/core/objects/handlers\";\r\nimport {parseSize} from \"../../lib/jstls/src/core/geometry/size/size\";\r\nimport {KeyableObject} from \"../../lib/jstls/src/types/core/objects\";\r\nimport {queryBuilder} from \"../search/query/builder\";\r\nimport {apply} from \"../../lib/jstls/src/core/functions/apply\";\r\n\r\nexport const thumbnailSizeExpression: string = 's72-c';\r\n\r\nexport function posts(options: PaginatePostsOptionsSummary): void;\r\nexport function posts(options: PaginatePostsOptionsFull): void;\r\nexport function posts(options: PaginatePostsOptions<PostEntry | PostEntrySummary, Blog, any>) {\r\n  requireObject(options, 'options');\r\n  options.feed = getIf(options.feed, isObject, () => (<FeedOptions>{}));\r\n  const params = SearchParams.from(options.feed.params);\r\n\r\n  function changePage(this: PaginatePostsHandler, page: number) {\r\n    options.feed.params = SearchParamsBuilder.from(params)\r\n      .paginated(page)\r\n      .build();\r\n\r\n    get(options.feed)\r\n      .then(blog => {\r\n        if (!isDefined(blog))\r\n          return;\r\n\r\n        options.onPosts(blog!.feed.entry, blog!)\r\n      })\r\n  }\r\n\r\n  (params.query() ? all : get)(options.feed)\r\n    .then(blog => {\r\n      if (blog.feed.openSearch$totalResults > 0) {\r\n        options.onTotal(Object.freeze({\r\n          total: blog.feed.openSearch$totalResults,\r\n          page: changePage\r\n        }));\r\n      }\r\n    })\r\n    .catch(console.error)\r\n}\r\n\r\nfunction toFormatSize(size: ImageSize<number> | number | string): string {\r\n  return isObject(size) ? `${string((<ImageSize<number>>size).width)}:${string((<ImageSize<number>>size).height)}` : string(size);\r\n}\r\n\r\nexport function postThumbnail(source: PostEntry | PostEntrySummary | RawPostEntry | RawPostEntrySummary, size: ImageSize<number> | number | string, ratio?: string | number): string {\r\n  const parse = parseSize(<any>function (this: KeyableObject, width: number, height: number) {\r\n    this.width = Math.round(width);\r\n    this.height = Math.round(height);\r\n    this.adjust = function () {\r\n      return this;\r\n    }\r\n    this.ratio = function () {\r\n      return this.height === 0 ? 0 : this.width / this.height;\r\n    }\r\n\r\n  }, isObject, toFormatSize(size), getDefined(ratio, () => 16 / 9));\r\n  const expression = `w${parse.width}-h${parse.height}-p-k-no-nu`;\r\n  return source.media$thumbnail\r\n    .url.replace(`/${thumbnailSizeExpression}/`, `/${expression}/`)\r\n    .replace(`=${thumbnailSizeExpression}`, `=${expression}`);\r\n}\r\n\r\nexport function withCategories(options: WithCategoriesPostsOptionsSummary): void;\r\nexport function withCategories(options: WithCategoriesPostsOptionsFull): void;\r\nexport function withCategories(options: WithCategoriesPostsOptions<any, any, any>) {\r\n  const categories: string[] = options.categories;\r\n\r\n  if (categories.isEmpty())\r\n    return;\r\n\r\n  const feed = feedOptions(options.feed);\r\n  const params = SearchParams.from(feed.params);\r\n\r\n  const builder = letValue(queryBuilder(), (it) => apply((options.every ? it.and : it.or), it));\r\n\r\n  SearchParamsBuilder.from(params)\r\n    .query(\r\n      apply(builder.categories, builder, categories)\r\n        .build()\r\n    );\r\n\r\n\r\n  all(feed)\r\n    .then(blog => {\r\n      options.onPosts(\r\n        blog.feed.entry\r\n          .map(post => ({count: post.category.filter(it => categories.indexOf(it) >= 0).length, post}))\r\n          .sort((a, b) => b.count - a.count)\r\n          .slice(0, params.max()),\r\n        blog\r\n      );\r\n    })\r\n}\r\n","import {readonlys} from \"../definer\";\r\nimport {first, firstOrNull, isEmpty, isNotEmpty, last, lastOrNull} from \"./shared/iterables\";\r\nimport {ArrayExtensions, ArrayWithExtensions, CountsCompareFn, Pushable} from \"../../types/core/extensions/array\";\r\n\r\nimport {getIf, requireDefined, requireIf} from \"../objects/validators\";\r\nimport {isDefined, isFunction, isObject} from \"../objects/types\";\r\nimport {apply} from \"../functions/apply\";\r\n\r\n\r\nexport function counts<T, R>(this: T[], value: any, compare?: CountsCompareFn<T, T[], R>, thisArg?: R): number {\r\n  requireDefined(value);\r\n  value = value.valueOf();\r\n  compare = getIf(compare, isFunction, () => (target, current) => target === current)\r\n  return this.reduce((total, it, i, arr) => total + +apply(compare!, thisArg!, [value, it, i, arr]), 0);\r\n}\r\n\r\nexport function extend<I, T extends Pushable<I>>(this: T, source: I[]): T;\r\nexport function extend<I, T extends ArrayWithExtensions<I>>(this: T, source: I[]): T;\r\nexport function extend<I, T extends Pushable<I>>(this: T, source: I[]): T {\r\n  requireIf(source, isObject, \"The source must be an indexable object.\");\r\n  apply(this.push, this, source);\r\n  return this;\r\n}\r\n\r\nexport function filterDefined<T>(this: T[]): NonNullable<T>[] {\r\n  return this.filter(isDefined) as NonNullable<T>[];\r\n}\r\n\r\n/**\r\n * Apply to the Array prototype the given extensions.\r\n * @param extensions The extensions to apply.\r\n * @see {ArrayExtensions}\r\n */\r\nexport function arrayExtensions(extensions: Partial<ArrayExtensions<any>>) {\r\n  readonlys<ArrayExtensions<any>>(Array.prototype, extensions)\r\n}\r\n\r\n/**\r\n * Apply to the Array prototype some utils extensions.\r\n * @see {ArrayExtensions}\r\n */\r\nexport function applyArrayExtensions() {\r\n  readonlys<ArrayWithExtensions<any>>(Array.prototype, {\r\n    first,\r\n    firstOrNull,\r\n    isEmpty,\r\n    isNotEmpty,\r\n    last,\r\n    lastOrNull,\r\n    counts,\r\n    extends: extend,\r\n    filterDefined,\r\n  })\r\n}\r\n","import {rawAll, rawGet} from \"./feeds/raw\";\r\nimport {all, get} from \"./feeds\";\r\nimport {paramsBuilder, SearchParamsBuilder} from \"./search\";\r\nimport {buildUrl} from \"./shared\";\r\nimport {Routes} from \"./types/feeds/shared\";\r\nimport {posts, postThumbnail, withCategories} from \"./posts\";\r\nimport {arrayExtensions, extend} from \"../lib/jstls/src/core/extensions/array\";\r\nimport {isEmpty, isNotEmpty} from \"../lib/jstls/src/core/extensions/shared/iterables\";\r\nimport {coerceAtLeast, coerceAtMost, coerceIn, numberExtensions} from \"../lib/jstls/src/core/extensions/number\";\r\nimport {stringExtensions, toInt} from \"../lib/jstls/src/core/extensions/string\";\r\nimport {readonlys} from \"../lib/jstls/src/core/definer\";\r\nimport {RawFeed} from \"./types/feeds/raw\";\r\nimport {Feed} from \"./types/feeds\";\r\nimport {Posts} from \"./types/posts\";\r\nimport {queryBuilder, QueryStringBuilder} from \"./search/query/builder\";\r\nimport {Search} from \"./types/search\";\r\n\r\narrayExtensions({\r\n  isEmpty,\r\n  isNotEmpty,\r\n  extends: extend,\r\n});\r\n\r\nnumberExtensions({\r\n  coerceIn,\r\n  coerceAtLeast,\r\n  coerceAtMost\r\n})\r\n\r\nstringExtensions({\r\n  isEmpty,\r\n  isNotEmpty,\r\n  toInt\r\n})\r\n\r\n\r\nreadonlys(<RawFeed>rawGet, {\r\n  all: rawAll\r\n})\r\n\r\n/**\r\n * The handler to make requests to the blogger feed API.\r\n */\r\nexport const feed = <Feed>get;\r\nreadonlys(feed, {\r\n  all,\r\n  raw: rawGet,\r\n});\r\n\r\n/**\r\n * The handler for search on blogger feed.\r\n */\r\nexport const search: Search = {\r\n  query: queryBuilder,\r\n  QueryStringBuilder,\r\n  params: paramsBuilder,\r\n  SearchParamsBuilder\r\n}\r\n\r\nreadonlys(<Posts>posts, {\r\n  createsThumbnail: postThumbnail,\r\n  withCategories\r\n})\r\n\r\n\r\ninterface Feeddy {\r\n  buildUrl: typeof buildUrl;\r\n  routes: Routes;\r\n  feed: Feed;\r\n  search: Search;\r\n  posts: Posts;\r\n}\r\n\r\nexport * from \"./shared\";\r\n\r\nexport {posts}\r\n\r\n"],"names":["get"],"mappings":"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","x_google_ignoreList":[3]}